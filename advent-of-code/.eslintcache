[{"/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/index.js":"1","/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/App.js":"2","/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/reportWebVitals.js":"3","/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/days/Day4/index.jsx":"4","/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/days/Day4/day4input.js":"5"},{"size":500,"mtime":1607107087016,"results":"6","hashOfConfig":"7"},{"size":218,"mtime":1607107087015,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607107087017,"results":"9","hashOfConfig":"7"},{"size":3618,"mtime":1607109065427,"results":"10","hashOfConfig":"7"},{"size":26330,"mtime":1607107087016,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"6ql58r",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/index.js",[],["24","25"],"/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/App.js",[],"/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/reportWebVitals.js",[],"/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/days/Day4/index.jsx",["26","27","28","29","30"],"import React, {useState} from 'react';\nimport {passports} from './day4input';\n\n\nconst isNum = (val) => !Number.isNaN(parseInt(val,10));\n\nfunction checkValid(field, value){\n  switch (field){\n    case 'byr':\n      if (!isNum(value)) return false;\n      return value >= 1920 && value <= 2002;\n    case 'iyr':\n      if (!isNum(value)) return false;\n      return value >= 2010 && value <= 2020;\n    case 'eyr':\n      if (!isNum(value)) return false;\n      return value >= 2020 && value <= 2030;\n    case 'hgt':\n      const isCm = value.includes('cm');\n      const isInch = value.includes('in');\n      if (!isCm && !isInch) return false;\n      if (isCm) {\n        const cmHeight = parseInt(value.replace('cm', ''),10);\n        if (!isNum(cmHeight)) return false;\n        return cmHeight >= 150 && cmHeight <= 193;\n      }\n      const inchHeight = parseInt(value.replace('in', ''),10);\n      if (!isNum(inchHeight)) return false;\n      return inchHeight >= 59 && inchHeight <= 76;\n    case 'hcl':\n      if (value.charAt(0) !== '#') return false;\n      const hairColor = value.replace('#', '');\n      if (hairColor.length !== 6) return false;\n      const validLetters = ['a','b','c','d','e','f'];\n      return hairColor.split('').every( char => validLetters.includes(char) || isNum(char));\n    case'ecl':\n      const validEyes = ['amb', 'blu', 'brn', 'gry', 'grn', 'hzl', 'oth'];\n      return validEyes.includes(value);\n    case 'pid':\n      if (value.length !== 9) return false;\n      return value.split('').every(char => isNum(char));\n    case 'cid':\n      return true;\n  }\n}\n\nexport function Day4() {\n  const [input, setInput] = useState('');\n  console.log(input);\n  const requiredFields = [\n    'byr',\n    'iyr',\n    'eyr',\n    'hgt',\n    'hcl',\n    'ecl',\n    'pid'\n  ];\n  const testData = ['ecl:gry pid:860033327 eyr:2020 hcl:#fffffd ' +\n  'byr:1937 iyr:2017 cid:147 hgt:183cm',\n  'iyr:2013 ecl:amb cid:350 eyr:2023 pid:028048884 ' +\n  'hcl:#cfa07d byr:1929 ',\n  'hcl:#ae17e1 iyr:2013 ' +\n  'eyr:2024 ' +\n  'ecl:brn pid:760753108 byr:1931 ' +\n  'hgt:179cm',\n  'hcl:#cfa07d eyr:2025 pid:166559648 ' +\n  'iyr:2011 ecl:brn hgt:59in']\n\n  const validPassportTest = ['pid:087499704 hgt:74in ecl:grn iyr:2012 eyr:2030 byr:1980 ' +\n  'hcl:#623a2f',\n  'eyr:2029 ecl:blu cid:129 byr:1989 ' +\n  'iyr:2014 pid:896056539 hcl:#a97842 hgt:165cm',\n  'hcl:#888785 ' +\n  'hgt:164cm byr:2001 iyr:2015 cid:88 ' +\n  'pid:545766238 ecl:hzl ' +\n  'eyr:2022',\n  'iyr:2010 hgt:158cm hcl:#b6652a ecl:blu byr:1944 eyr:2021 pid:093154719']\n  const testedPassports = passports;\n  let countPassportsOver6 = 0;\n  const validFieldsPassports = testedPassports.filter((passport) => {\n    const fields = passport.split(' ');\n    const length = fields.length;\n    if (length < 7) return false;\n    countPassportsOver6++;\n    if (length === 8) return true;\n    return fields.every(field => !field.includes('cid'));\n  });\n\n  const completelyValidPassports = validFieldsPassports.filter(passport => {\n    const fields2 = passport.split(' ');\n    return fields2.every(field2 => {\n      const fieldValue = field2.split(':');\n      return checkValid(fieldValue[0], fieldValue[1]);\n    })\n  });\n\n  return <div>\n    <h1>Let's find some passports!</h1>\n      <label htmlFor=\"day4-input\">Input\n      <textarea id=\"day4-input\" value={input} onChange={({target}) => setInput(target.value)}/>\n    </label>\n    <p>All the passports have a length of {testedPassports.length}</p>\n    <p>There are <b>{validFieldsPassports.length}</b> passports with the correct fields</p>\n    <p>There are <b>{completelyValidPassports.length}</b> passports with valid fields</p>\n  </div>\n}","/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/days/Day4/day4input.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":8,"column":3,"nodeType":"37","messageId":"38","endLine":44,"endColumn":4},{"ruleId":"39","severity":1,"message":"40","line":50,"column":9,"nodeType":"41","messageId":"42","endLine":50,"endColumn":23},{"ruleId":"39","severity":1,"message":"43","line":59,"column":9,"nodeType":"41","messageId":"42","endLine":59,"endColumn":17},{"ruleId":"39","severity":1,"message":"44","line":70,"column":9,"nodeType":"41","messageId":"42","endLine":70,"endColumn":26},{"ruleId":"39","severity":1,"message":"45","line":85,"column":5,"nodeType":"41","messageId":"42","endLine":85,"endColumn":24},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'requiredFields' is assigned a value but never used.","Identifier","unusedVar","'testData' is assigned a value but never used.","'validPassportTest' is assigned a value but never used.","'countPassportsOver6' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]