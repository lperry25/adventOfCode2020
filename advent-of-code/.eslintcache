[{"/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/index.js":"1","/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/reportWebVitals.js":"2","/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/App.js":"3","/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/days/Day11/index.jsx":"4","/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/days/Day4/index.jsx":"5","/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/days/Day12/index.jsx":"6"},{"size":500,"mtime":1607107087016,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607107087017,"results":"9","hashOfConfig":"8"},{"size":221,"mtime":1607755854438,"results":"10","hashOfConfig":"8"},{"size":3054,"mtime":1607693440229,"results":"11","hashOfConfig":"8"},{"size":2092,"mtime":1607120617487,"results":"12","hashOfConfig":"8"},{"size":3472,"mtime":1607759789206,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"6ql58r",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/index.js",[],["28","29"],"/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/reportWebVitals.js",[],"/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/App.js",[],"/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/days/Day11/index.jsx",["30"],"import React, { useState } from 'react';\n\nexport function Day11() {\n  const [input, setInput] = useState('');\n\n  const inputTextArea =\n    <>\n      <h1>Adapter Array</h1>\n      <textarea id=\"day4-input\"\n        value={input}\n        placeholder=\"Add your input file\"\n        onChange={({ target }) => setInput(target.value)} />\n    </>;\n\n  if (input === '') return inputTextArea;\n  let seatMap = input.split('\\n').map(seatRow => seatRow.split(''));\n\n  const exists = (i, j) => i ? i[j] : undefined;\n\n  const closestChair = (map, x, y, adjustx, adjusty) => {\n    const seat = exists(map[x], [y]);\n    if (seat !== '.') return seat;\n    return closestChair(map, x + adjustx, y + adjusty, adjustx, adjusty);\n  }\n\n  const adjacentSeats = (map, i, j, isPart1) => {\n    if (isPart1) {\n      return [\n        exists(map[i - 1], j - 1), exists(map[i - 1], j), exists(map[i - 1], j + 1),\n        exists(map[i], j - 1), exists(map[i], j + 1),\n        exists(map[i + 1], j - 1), exists(map[i + 1], j), exists(map[i + 1], j + 1),\n      ];\n    }\n    return [\n      closestChair(map, i - 1, j - 1, -1, -1),\n      closestChair(map, i - 1, j, -1, 0),\n      closestChair(map, i - 1, j + 1, -1, 1),\n      closestChair(map, i, j - 1, 0, -1),\n      closestChair(map, i, j + 1, 0, 1),\n      closestChair(map, i + 1, j - 1, 1, -1),\n      closestChair(map, i + 1, j, 1, 0),\n      closestChair(map, i + 1, j + 1, 1, 1),\n    ];\n  }\n\n  const countOccupied = (map) => map.filter(seat => seat === '#').length;\n\n  const setSeatValue = (seat, i, j, map, isPart1) => {\n    switch (seat) {\n      case '.':\n        return '.';\n      case '#':\n        if (countOccupied(adjacentSeats(map, i, j, isPart1)) >= (isPart1 ? 4 : 5)) return 'L';\n        return '#';\n      case 'L':\n        if (adjacentSeats(map, i, j, isPart1).every(chair => chair !== '#' || undefined)) return '#';\n        return 'L';\n      default:\n        throw Error('Unexpected value in seat map');\n    }\n  }\n  const prepareMap = (current, isPart1) => current.map((row, r) => row.map((seat, s) => setSeatValue(seat, r, s, current, isPart1)))\n  const loopSeatMap = (startingMap, isPart1) => {\n    let seatMap2 = [];\n    let loopIndex = 0;\n    do {\n      loopIndex++;\n      if (loopIndex % 2) {\n        seatMap2 = prepareMap(startingMap, isPart1);\n      } else {\n        startingMap = prepareMap(seatMap2, isPart1);\n      }\n    } while (!startingMap.every((row, r) => row.every((seat, s) => seat === seatMap2[r][s])));\n    return startingMap;\n  }\n\n  const countAllOccupied = (finalState) => finalState.map(row => countOccupied(row)).reduce((a, b) => a + b);\n\n\n  const occupiedSeatsPart1 = countAllOccupied(loopSeatMap(seatMap, true));\n  const occupiedSeatsPart2 = countAllOccupied(loopSeatMap(seatMap, false));\n\n\n  return (<div>\n    {inputTextArea}\n    <p>There are {seatMap.length} rows and {seatMap[0].length} columns of seats</p>\n    <p>Part 1: There are {occupiedSeatsPart1} occupied seats when it stabalizes</p>\n    <p>Part 2: There are {occupiedSeatsPart2} occupied seats when it stabalizes</p>\n    <br />\n\n  </div>)\n}","/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/days/Day4/index.jsx",[],"/Users/lauraperry/Documents/adventOfCode2020/advent-of-code/src/days/Day12/index.jsx",["31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":73,"column":33,"nodeType":"38","messageId":"39","endLine":73,"endColumn":92},{"ruleId":"40","severity":1,"message":"41","line":20,"column":9,"nodeType":"42","messageId":"43","endLine":20,"endColumn":21},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'seatMap2'.","ArrowFunctionExpression","unsafeRefs","no-unused-vars","'manhattanSum' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]